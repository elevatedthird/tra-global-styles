.block-aries-local-tasks {
  position: relative;
  z-index: 1;

  ul {
    margin: 0;
  }

  a {
    padding: 1rem 2rem;
    background-color: $secondary-color;
    color: $color--white;
    margin: 0;

    &:hover, &:focus {
      background-color: $primary-color;
    }
  }

  li {
    padding: 0;
    margin: 0;

  }
}

.views-field.views-field-thumbnail__target-id, .glb-media-library-item__preview {
  width: 100px;
  padding-bottom: 100px;
}

.glb-canvas-form {
  overflow: initial;
}

.form-tablefield .filter-wrapper {
  display: none;
}

//shapes
.shape {
  height: 100%;

  & > div {
    @include breakpoint(medium) {
      height: 100%;
    }
  }

  //common styles between both half and whole img
  img {
    height: 100%;
    object-fit: cover;
  }

  @each $shape, $clipPath in $shapes {
    &.#{$shape} {
      clip-path: key($shapes, $shape, shape);
      transition: clip-path 1s ease;
    }
    @include breakpoint(mobile_menu down) {
      &.mobile--#{$shape}.mobile--#{$shape} {
        clip-path: key($shapes, $shape, shape);
        transition: clip-path 1s ease;
      }
    }
    &.#{$shape}.shape-hover:hover {
      clip-path: key($shapes, $shape, default);
    }
  }

  .theme--contrasting & {
    background-color: var(--theme-accent-color-vibrant);
  }

  .theme--vibrant & {
    background-color: var(--theme-accent-color-contrasting);
  }

  &.has-media {
    background-color: transparent;
  }
}

//colors for shapes
//set the theme vibrant/contrast colors
@each $name, $color in $contrasting-colors {
  .color-contrasting-#{$name} {
    --theme-accent-color-contrasting: #{$color};
  }
}

@each $name, $color in $vibrant-colors {
  .color-vibrant-#{$name} {
    --theme-accent-color-vibrant: #{$color};
  }
}

//overrides the color from claro theme
.ui-autocomplete {
  z-index: 1;
  background-color: white;
}
